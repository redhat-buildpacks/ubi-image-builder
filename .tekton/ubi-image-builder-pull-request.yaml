apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-buildpacks/ubi-image-builder?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main"
  labels:
    appstudio.openshift.io/application: ubi-image-builder
    appstudio.openshift.io/component: ubi-image-builder
    pipelines.appstudio.openshift.io/type: build
    dev.snowdrop.ubi/builder-image: "1"
  name: ubi-image-builder-on-pull-request
  namespace: rh-buildpacks-tenant
spec:
  # TODO: To be refactored
  # pipelineRef:
  #  resolver: git
  #  params:
  #    - name: url
  #      value: https://github.com/redhat-buildpacks/ubi-image-builder.git
  #    - name: revision
  #      value: main
  #    - name: pathInRepo
  #      value: /tekton/pipeline/pack-builder-image/0.1/pack-builder-image.yml
  params:
    # RHTAP parameters
    - name: git-url
      value: '{{repo_url}}'
    - name: source-dir
      value: source
    - name: image-expires-after
      value: 5d
    - name: output-image
      value: quay.io/redhat-user-workloads/rh-buildpacks-tenant/ubi-image-builder/ubi-image-builder:on-pr-{{revision}}
    - name: path-context
      value: .
    - name: revision
      value: '{{revision}}'
    - name: debug
      value: "true"
    # Flags to pass to the "pack builder create" command
    - name: packCmdBuilderFlags
      value:
        - -v
        - --publish

  pipelineSpec:
    params:
    - description: A boolean value used to execute or not a task
      default: "false"
      name: debug
      type: string
    - description: Source Repository URL
      name: git-url
      type: string
    - description: Revision of the Source Repository
      name: revision
      type: string
      default: ""
    - # RHTAP Git clone task download the content of the project
      # under the following output directory: <WORKSPACE>/source
      # We define this parameter here to let the tasks
      # to specify properly the workingDir
      description: Source directory
      name: source-dir
      type: string
    - description: Pack client image url
      name: imageUrl
      type: string
      default: buildpacksio/pack
    - description: Pack client image tag
      name: imageTag
      type: string
      default: latest
    - description: Pack builder command flags
      name: packCmdBuilderFlags
      type: array
      default: [""]
    - description: Execute the build with network isolation
      default: "false"
      name: hermetic
      type: string
    - description: Build dependencies to be prefetched by Cachi2
      default: ""
      name: prefetch-input
      type: string

    tasks:
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
        taskRef:
          params:
            - name: name
              value: git-clone
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:b8fddc2d36313a5cde93aba2491205f4a84e6853af6c34ede681f8339b147478
            - name: kind
              value: task
          resolver: bundles
        workspaces:
          - name: output
            workspace: source-dir
          - name: basic-auth
            workspace: git-auth

      - name: fetch-packconfig-registrysecret
        runAfter:
          - clone-repository
        taskSpec:
          steps:
            - image: quay.io/centos/centos:latest
              script: |
                echo "Copy pack config.toml to $(workspaces.pack-workspace.path)"
                cp $(workspaces.data-store.path)/config.toml $(workspaces.pack-workspace.path)
                
                echo "Copy .dockerconfigjson to $(workspaces.pack-workspace.path)/.docker/config.json"
                mkdir -p $(workspaces.pack-workspace.path)/.docker
                cp $(workspaces.data-store.path)/.dockerconfigjson $(workspaces.pack-workspace.path)/.docker/config.json
        workspaces:
          - name: data-store
            workspace: data-store
          - name: pack-workspace
            workspace: pack-workspace

      - name: list-files
        runAfter:
          - fetch-packconfig-registrysecret
        when:
          - input: $(params.debug)
            operator: in
            values: [ "true" ]
        taskSpec:
          steps:
            - name: list-source-workspace
              image: quay.io/centos/centos:latest
              script: |
                echo "List files under: $(workspaces.pack-workspace.path)"
                ls -la $(workspaces.pack-workspace.path)/
                
                ls -la $(workspaces.pack-workspace.path)/.docker/
                cat $(workspaces.pack-workspace.path)/.docker/config.json
                
                echo "List files under: $(workspaces.source-dir.path)/$(params.source-dir)"
                ls -la $(workspaces.source-dir.path)/$(params.source-dir)
        workspaces:
          - name: pack-workspace
            workspace: pack-workspace
          - name: source-dir
            workspace: source-dir

      - name: prefetch-dependencies
        params:
          - name: input
            value: $(params.prefetch-input)
        runAfter:
          - clone-repository
        taskRef:
          params:
            - name: name
              value: prefetch-dependencies
            - name: bundle
              value: quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies:0.1@sha256:563b91f72adf9b3b93f990f7c1d140f79749af837135aa07212347cb9ed79a34
            - name: kind
              value: task
          resolver: bundles
        when:
          - input: $(params.hermetic)
            operator: in
            values:
            - "true"
        workspaces:
          - name: source
            workspace: workspace
            
      - name: pack-builder
        runAfter:
          - fetch-packconfig-registrysecret
          - prefetch-dependencies
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/redhat-buildpacks/ubi-image-builder.git
            - name: revision
              value: main
            - name: pathInRepo
              value: /tekton/task/pack-builder/0.1/pack-builder.yml
        params:
          - name: PACK_SOURCE_DIR
            value: '$(params.source-dir)'
          - name: PACK_CLI_IMAGE
            value: '$(params.imageUrl)'
          - name: PACK_CLI_IMAGE_VERSION
            value: '$(params.imageTag)'
          - name: BUILDER_IMAGE_NAME
            value: '$(params.output-image)'
          - name: PACK_BUILDER_TOML
            value: ubi-builder.toml
          - name: PACK_CMD_FLAGS
            value: [ "$(params.packCmdBuilderFlags)" ]
        workspaces:
          - name: source-dir
            workspace: source-dir
          - name: pack-workspace
            workspace: pack-workspace

  workspaces:
    - name: source-dir
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: pack-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: data-store
      projected:
        sources:
          - secret:
              name: pack-config-toml
          - secret:
              name: ubi-image-builder # Secret name containing the quay credentials
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
